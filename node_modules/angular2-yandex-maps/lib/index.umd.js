/**
 * angular2-yandex-maps - yandex-maps-directive
 * @version v1.0.42
 * @author undefined
 * @link undefined
 * @license MIT
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@angular/core"), require("rxjs/Observable"));
	else if(typeof define === 'function' && define.amd)
		define(["@angular/core", "rxjs/Observable"], factory);
	else if(typeof exports === 'object')
		exports["ticktock"] = factory(require("@angular/core"), require("rxjs/Observable"));
	else
		root["ticktock"] = factory(root["ng"]["core"], root["Rx"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_8__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 14);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(0);
var Observable_1 = __webpack_require__(8);
var ya_maps_loader_1 = __webpack_require__(6);
var browser_globals_1 = __webpack_require__(2);
var YaMapsAPIWrapper = /** @class */ (function () {
    function YaMapsAPIWrapper(_loader, _zone, d) {
        var _this = this;
        this._loader = _loader;
        this._zone = _zone;
        this._documentRef = d;
        this._map = new Promise(function (resolve) {
            _this._mapResolver = resolve;
        });
    }
    YaMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {
        var _this = this;
        var res = this._loader.load().then(function () {
            var create = function () { return setTimeout(function () {
                if (ymaps.Map) {
                    var map = new ymaps.Map(el, mapOptions);
                    _this._mapResolver(map);
                }
                else {
                    create();
                }
            }, 100); };
            create();
        }).catch(function (e) { return console.log(e); });
        return res;
    };
    YaMapsAPIWrapper.prototype.setCenter = function (latitude, longitude) {
        this._map.then(function (map) {
            map.setCenter([latitude, longitude]);
        });
    };
    YaMapsAPIWrapper.prototype.getCenter = function () {
        return this._map.then(function (map) {
            return map.getCenter();
        });
    };
    YaMapsAPIWrapper.prototype.panTo = function (points, options) {
        this._map.then(function (map) {
            map.panTo(points, options);
        });
    };
    YaMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {
        var _this = this;
        return Observable_1.Observable.create(function (observer) {
            _this._map.then(function (m) {
                m.events.add(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });
            });
        });
    };
    YaMapsAPIWrapper.prototype.createMarker = function (marker) {
        return this._map.then(function (map) {
            var m = new ymaps.Placemark([marker.latitude, marker.longitude], {
                balloonContentHeader: marker.balloonContentHeader,
                balloonContentBody: marker.balloonContentBody,
                balloonContentFooter: marker.balloonContentFooter,
                iconContent: marker.iconContent
            }, {
                draggable: marker.draggable,
                preset: marker.preset,
                iconLayout: marker.iconLayout,
                iconImageHref: marker.iconImageHref,
                iconImageSize: marker.iconImageSize,
                iconImageOffset: marker.iconImageOffset
            });
            map.geoObjects.add(m);
            return m;
        });
    };
    YaMapsAPIWrapper.prototype.removeGeo = function (overlay) {
        this._map.then(function (map) {
            map.geoObjects.remove(overlay);
        });
    };
    YaMapsAPIWrapper.prototype.createClaster = function (claster) {
        return this._map.then(function (map) {
            if (claster.markers.length === 0) {
                return;
            }
            var myGeoObjects;
            myGeoObjects = new Array();
            claster.markers.forEach(function (x) {
                var point = new ymaps.GeoObject({
                    geometry: { type: x.type, coordinates: [x.lat, x.lng] }
                });
                myGeoObjects.push(point);
            });
            var clusterer = new ymaps.Clusterer({});
            clusterer.add(myGeoObjects);
            map.geoObjects.add(clusterer);
            return clusterer;
        });
    };
    YaMapsAPIWrapper.prototype.createObjectManager = function (objectManager) {
        return this._map.then(function (map) {
            if (objectManager.datasource.length === 0) {
                return;
            }
            var nativeObjectManager = new ymaps.ObjectManager({
                clusterize: objectManager.clusterize,
                gridSize: objectManager.gridSize
            });
            nativeObjectManager.add(objectManager.datasource);
            nativeObjectManager.objects.options.set('preset', objectManager.objectPreset);
            nativeObjectManager.clusters.options.set('preset', objectManager.clasterPreset);
            map.geoObjects.add(nativeObjectManager);
            return nativeObjectManager;
        });
    };
    YaMapsAPIWrapper.prototype.navigateToGeoObject = function (objectManager, id) {
        var obj = objectManager.objects.getById(id);
        if (obj) {
            this.setCenter(obj.geometry.coordinates[0], obj.geometry.coordinates[1]);
            objectManager.objects.balloon.open(id);
        }
    };
    YaMapsAPIWrapper.prototype.checkYaSciptLoaded = function () {
        return this._documentRef.getNativeDocument().getElementById('YaScript');
    };
    YaMapsAPIWrapper.prototype.objectManagerSetFilter = function (objectManager, filter) {
        objectManager.setFilter(filter);
    };
    YaMapsAPIWrapper = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [ya_maps_loader_1.YaMapsAPILoader, core_1.NgZone, browser_globals_1.DocumentRef])
    ], YaMapsAPIWrapper);
    return YaMapsAPIWrapper;
}());
exports.YaMapsAPIWrapper = YaMapsAPIWrapper;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var WindowRef = /** @class */ (function () {
    function WindowRef() {
    }
    WindowRef.prototype.getNativeWindow = function () { return window; };
    return WindowRef;
}());
exports.WindowRef = WindowRef;
// tslint:disable-next-line:max-classes-per-file
var DocumentRef = /** @class */ (function () {
    function DocumentRef() {
    }
    DocumentRef.prototype.getNativeDocument = function () {
        return document;
    };
    return DocumentRef;
}());
exports.DocumentRef = DocumentRef;
exports.BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(0);
var ya_maps_api_wrapper_1 = __webpack_require__(1);
var ClasterManager = /** @class */ (function () {
    function ClasterManager(_mapsWrapper, _zone) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._clasters = new Map();
    }
    ClasterManager.prototype.addClaster = function (claster) {
        var clasterPromise = this._mapsWrapper.createClaster(claster);
        this._clasters.set(claster, clasterPromise);
    };
    ClasterManager = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [ya_maps_api_wrapper_1.YaMapsAPIWrapper, core_1.NgZone])
    ], ClasterManager);
    return ClasterManager;
}());
exports.ClasterManager = ClasterManager;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(0);
var Observable_1 = __webpack_require__(8);
var ya_maps_api_wrapper_1 = __webpack_require__(1);
var MarkerManager = /** @class */ (function () {
    function MarkerManager(_mapsWrapper, _zone) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._markers = new Map();
    }
    MarkerManager.prototype.deleteMarker = function (marker) {
        var _this = this;
        var m = this._markers.get(marker);
        if (m == null) {
            return Promise.resolve();
        }
        // tslint:disable-next-line:no-shadowed-variable
        return m.then(function (m) {
            return _this._zone.run(function () {
                // tslint:disable-next-line:no-shadowed-variable
                _this.getNativeMarker(marker).then(function (m) {
                    _this._mapsWrapper.removeGeo(m);
                    _this._markers.delete(marker);
                });
            });
        });
    };
    MarkerManager.prototype.addMarker = function (marker) {
        var markerPromise = this._mapsWrapper.createMarker(marker);
        this._markers.set(marker, markerPromise);
    };
    MarkerManager.prototype.showBalloon = function (marker) {
        this.getNativeMarker(marker).then(function (m) {
            m.balloon.open();
        });
    };
    MarkerManager.prototype.getNativeMarker = function (marker) {
        return this._markers.get(marker);
    };
    MarkerManager.prototype.createEventObservable = function (eventName, marker) {
        var _this = this;
        return Observable_1.Observable.create(function (observer) {
            _this._markers.get(marker).then(function (m) {
                m.events.add(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
        });
    };
    MarkerManager = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [ya_maps_api_wrapper_1.YaMapsAPIWrapper, core_1.NgZone])
    ], MarkerManager);
    return MarkerManager;
}());
exports.MarkerManager = MarkerManager;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(0);
var ya_maps_api_wrapper_1 = __webpack_require__(1);
var ObjectManagerManager = /** @class */ (function () {
    function ObjectManagerManager(_mapsWrapper, _zone) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._managers = new Map();
    }
    ObjectManagerManager.prototype.add = function (manager) {
        var managerPromise = this._mapsWrapper.createObjectManager(manager);
        this._managers.set(manager, managerPromise);
    };
    ObjectManagerManager.prototype.navigateToGeoObject = function (manager, id) {
        var _this = this;
        this.getNativeManager(manager).then(function (p) {
            _this._mapsWrapper.navigateToGeoObject(p, id);
        });
    };
    ObjectManagerManager.prototype.getNativeManager = function (manager) {
        return this._managers.get(manager);
    };
    ObjectManagerManager.prototype.setFilter = function (manager, filter) {
        var _this = this;
        this.getNativeManager(manager).then(function (p) {
            _this._mapsWrapper.objectManagerSetFilter(p, filter);
        });
    };
    ObjectManagerManager = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [ya_maps_api_wrapper_1.YaMapsAPIWrapper, core_1.NgZone])
    ], ObjectManagerManager);
    return ObjectManagerManager;
}());
exports.ObjectManagerManager = ObjectManagerManager;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(0);
var browser_globals_1 = __webpack_require__(2);
var YaMapsAPILoader = /** @class */ (function () {
    function YaMapsAPILoader(w, d) {
        this._windowRef = w;
        this._documentRef = d;
    }
    YaMapsAPILoader.prototype.load = function () {
        var script = this._documentRef.getNativeDocument().createElement('script');
        script.type = 'text/javascript';
        script.async = false;
        script.defer = true;
        script.id = 'YaScript';
        var callbackName = "angular2YAMapsAPILoader";
        script.src = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU&callback=angular2YAMapsAPILoader';
        // tslint:disable-next-line:ban-types
        this._scriptLoadingPromise = new Promise(function (resolve, reject) {
            script.onload = function () { resolve(); };
            script.onerror = function (error) { reject(); };
        });
        this._documentRef.getNativeDocument().body.appendChild(script);
        return this._scriptLoadingPromise;
    };
    YaMapsAPILoader = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [browser_globals_1.WindowRef, browser_globals_1.DocumentRef])
    ], YaMapsAPILoader);
    return YaMapsAPILoader;
}());
exports.YaMapsAPILoader = YaMapsAPILoader;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_8__;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(0);
var ymap_1 = __webpack_require__(13);
var marker_1 = __webpack_require__(11);
var claster_1 = __webpack_require__(10);
var objectManager_1 = __webpack_require__(12);
var ya_maps_loader_1 = __webpack_require__(6);
var browser_globals_1 = __webpack_require__(2);
__export(__webpack_require__(7));
/**
 * @internal
 */
function coreDirectives() {
    return [
        ymap_1.YaMap,
        marker_1.YaMarker,
        claster_1.YaClaster,
        objectManager_1.YaObjectManager
    ];
}
exports.coreDirectives = coreDirectives;
/**
 * The angular-ya-maps core module. Contains all Directives/Services/Pipes
 * of the core module. Please use `YaCoreModule.forRoot()` in your app module.
 */
var YaCoreModule = /** @class */ (function () {
    function YaCoreModule() {
    }
    YaCoreModule_1 = YaCoreModule;
    /**
     * Please use this method when you register the module at the root level.
     */
    YaCoreModule.forRoot = function () {
        return {
            ngModule: YaCoreModule_1,
            providers: browser_globals_1.BROWSER_GLOBALS_PROVIDERS.concat([
                { provide: ya_maps_loader_1.YaMapsAPILoader, useClass: ya_maps_loader_1.YaMapsAPILoader }
            ]),
        };
    };
    YaCoreModule = YaCoreModule_1 = __decorate([
        core_1.NgModule({ declarations: coreDirectives(), exports: coreDirectives() })
    ], YaCoreModule);
    return YaCoreModule;
    var YaCoreModule_1;
}());
exports.YaCoreModule = YaCoreModule;
function YaCoreModuleForRoot() {
    return [
        YaCoreModule.forRoot()
    ];
}
exports.YaCoreModuleForRoot = YaCoreModuleForRoot;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable-next-line:max-line-length
var core_1 = __webpack_require__(0);
var ya_maps_api_wrapper_1 = __webpack_require__(1);
var claster_manager_1 = __webpack_require__(3);
var clasterId = 0;
var YaClaster = /** @class */ (function () {
    function YaClaster(_clasterManager) {
        this._clasterManager = _clasterManager;
        this._markerAddedToManger = false;
        this._id = (clasterId++).toString();
    }
    YaClaster.prototype.ngOnChanges = function (changes) {
        if (!this._markerAddedToManger) {
            this._clasterManager.addClaster(this);
        }
    };
    // tslint:disable-next-line:no-empty
    YaClaster.prototype.ngOnDestroy = function () { };
    // tslint:disable-next-line:no-empty
    YaClaster.prototype._addEventListeners = function () { };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], YaClaster.prototype, "markers", void 0);
    YaClaster = __decorate([
        core_1.Directive({
            selector: 'ya-claster',
            providers: [
                ya_maps_api_wrapper_1.YaMapsAPIWrapper
            ]
        })
        // tslint:disable-next-line:directive-class-suffix
        ,
        __metadata("design:paramtypes", [claster_manager_1.ClasterManager])
    ], YaClaster);
    return YaClaster;
}());
exports.YaClaster = YaClaster;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable-next-line:max-line-length
var core_1 = __webpack_require__(0);
var ya_maps_api_wrapper_1 = __webpack_require__(1);
var marker_manager_1 = __webpack_require__(4);
var markerId = 0;
var YaMarker = /** @class */ (function () {
    function YaMarker(_markerManager) {
        this._markerManager = _markerManager;
        this.draggable = false;
        this.preset = 'islands#blueIcon';
        this.markerClick = new core_1.EventEmitter();
        // tslint:disable-next-line:max-line-length
        this.dragEnd = new core_1.EventEmitter();
        this._markerAddedToManger = false;
        this._observableSubscriptions = [];
        this._id = (markerId++).toString();
    }
    YaMarker.prototype.ngOnChanges = function (changes) {
        if (!this._markerAddedToManger) {
            this._markerManager.addMarker(this);
            this._markerAddedToManger = true;
            this._addEventListeners();
            return;
        }
        if (changes['showInfo']) {
            this._markerManager.showBalloon(this);
        }
    };
    YaMarker.prototype.ngOnDestroy = function () {
        this._markerManager.deleteMarker(this);
        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    YaMarker.prototype._addEventListeners = function () {
        var _this = this;
        // click event
        var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {
            _this._markerManager.showBalloon(_this);
            _this.markerClick.emit(null);
        });
        this._observableSubscriptions.push(cs);
        // dragend event
        // tslint:disable-next-line:max-line-length
        var ds = this._markerManager.createEventObservable('dragend', this).subscribe(function (e) {
            var thisPlacemark = e.get('target');
            var coords = thisPlacemark.geometry.getCoordinates();
            _this._markerManager.getNativeMarker(_this).then(function (m) {
                // tslint:disable-next-line:max-line-length
                _this.dragEnd.emit({ lat: coords[0], lng: coords[1], nativeMarker: m });
            });
        });
        this._observableSubscriptions.push(ds);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaMarker.prototype, "latitude", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaMarker.prototype, "longitude", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaMarker.prototype, "balloonLayout", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], YaMarker.prototype, "balloonContentHeader", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], YaMarker.prototype, "balloonContentBody", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], YaMarker.prototype, "balloonContentFooter", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], YaMarker.prototype, "draggable", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], YaMarker.prototype, "preset", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], YaMarker.prototype, "iconContent", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], YaMarker.prototype, "showInfo", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaMarker.prototype, "iconLayout", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaMarker.prototype, "iconImageHref", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaMarker.prototype, "iconImageSize", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaMarker.prototype, "iconImageOffset", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], YaMarker.prototype, "markerClick", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], YaMarker.prototype, "dragEnd", void 0);
    YaMarker = __decorate([
        core_1.Directive({
            selector: 'ya-marker',
            providers: [
                ya_maps_api_wrapper_1.YaMapsAPIWrapper
            ]
        })
        // tslint:disable-next-line:directive-class-suffix
        ,
        __metadata("design:paramtypes", [marker_manager_1.MarkerManager])
    ], YaMarker);
    return YaMarker;
}());
exports.YaMarker = YaMarker;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(0);
var ya_maps_api_wrapper_1 = __webpack_require__(1);
var objectManager_manager_1 = __webpack_require__(5);
var markerId = 0;
var YaObjectManager = /** @class */ (function () {
    function YaObjectManager(_manager) {
        this._manager = _manager;
        this.clusterize = false;
        this.clasterPreset = 'islands#blueIcon';
        this.objectPreset = 'islands#blueClusterIcons';
        this.gridSize = 0;
        this._observableSubscriptions = [];
        this._addedToManger = false;
        this._id = (markerId++).toString();
    }
    YaObjectManager.prototype.ngOnChanges = function (changes) {
        if (!this._addedToManger) {
            this._manager.add(this);
            this._addedToManger = true;
            return;
        }
        if (changes['selectedObjectId']) {
            this._manager.navigateToGeoObject(this, this.selectedObjectId);
        }
        if (changes['filter']) {
            console.log('filter ' + this.filter);
            this._manager.setFilter(this, this.filter);
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], YaObjectManager.prototype, "clusterize", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaObjectManager.prototype, "datasource", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], YaObjectManager.prototype, "clasterPreset", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], YaObjectManager.prototype, "objectPreset", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaObjectManager.prototype, "gridSize", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaObjectManager.prototype, "selectedObjectId", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaObjectManager.prototype, "filter", void 0);
    YaObjectManager = __decorate([
        core_1.Directive({
            selector: 'ya-object-manager',
            providers: [
                ya_maps_api_wrapper_1.YaMapsAPIWrapper
            ]
        })
        // tslint:disable-next-line:directive-class-suffix
        ,
        __metadata("design:paramtypes", [objectManager_manager_1.ObjectManagerManager])
    ], YaObjectManager);
    return YaObjectManager;
}());
exports.YaObjectManager = YaObjectManager;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable-next-line:max-line-length
var core_1 = __webpack_require__(0);
var ya_maps_api_wrapper_1 = __webpack_require__(1);
var marker_manager_1 = __webpack_require__(4);
var claster_manager_1 = __webpack_require__(3);
var objectManager_manager_1 = __webpack_require__(5);
var mapTypes = __webpack_require__(7);
var YaMap = /** @class */ (function () {
    function YaMap(_elem, _mapsWrapper) {
        this._elem = _elem;
        this._mapsWrapper = _mapsWrapper;
        this.longitude = 0;
        this.latitude = 0;
        this.zoom = 8;
        this.mapType = 'yandex#map';
        this.controls = null;
        // tslint:disable-next-line:max-line-length
        this.mapClick = new core_1.EventEmitter();
        this.actionTick = new core_1.EventEmitter();
        this.mapInit = false;
        this._observableSubscriptions = [];
    }
    YaMap.prototype.ngOnInit = function () {
        var container = this._elem.nativeElement.querySelector('.map-container-inner');
        this._initMapInstance(container);
        this.mapInit = true;
    };
    YaMap.prototype.ngOnChanges = function (changes) {
        if (this.mapInit) {
            this.updatePosition(changes);
            this.panTo(changes);
        }
    };
    YaMap.prototype._initMapInstance = function (el) {
        if (this.controls != null) {
            this._mapsWrapper.createMap(el, {
                center: [this.latitude, this.longitude], zoom: this.zoom, type: this.mapType,
                controls: this.controls
            });
        }
        else {
            this._mapsWrapper.createMap(el, {
                center: [this.latitude, this.longitude], zoom: this.zoom, type: this.mapType
            });
        }
        this._handleMapMouseEvents();
    };
    YaMap.prototype.updatePosition = function (changes) {
        if (changes['latitude'] == null && changes['longitude'] == null) {
            return;
        }
        this._mapsWrapper.setCenter(this.latitude, this.longitude);
    };
    YaMap.prototype.panTo = function (changes) {
        if (changes['panToObjects'] == null) {
            return;
        }
        this._mapsWrapper.panTo(this.panToObjects.points, this.panToObjects.params);
    };
    YaMap.prototype._handleMapMouseEvents = function () {
        var _this = this;
        var clickEvents = [
            { name: 'click', emitter: this.mapClick }
        ];
        var events = [
            { name: 'actiontick', emitter: this.actionTick }
        ];
        clickEvents.forEach(function (e) {
            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {
                var coords = event.get('coords');
                var value = { lat: coords[0], lng: coords[1] };
                e.emitter.emit(value);
            });
            _this._observableSubscriptions.push(s);
        });
        events.forEach(function (e) {
            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {
                _this._mapsWrapper.getCenter().then(function (coords) {
                    _this.latitude = coords[0];
                    _this.longitude = coords[1];
                    var value = { lat: coords[0], lng: coords[1] };
                    e.emitter.emit(value);
                });
            });
            _this._observableSubscriptions.push(s);
        });
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaMap.prototype, "longitude", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaMap.prototype, "latitude", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaMap.prototype, "zoom", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaMap.prototype, "minZoom", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], YaMap.prototype, "maxZoom", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaMap.prototype, "mapType", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], YaMap.prototype, "controls", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], YaMap.prototype, "panToObjects", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], YaMap.prototype, "mapClick", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], YaMap.prototype, "actionTick", void 0);
    YaMap = __decorate([
        core_1.Component({
            selector: 'ya-map',
            providers: [
                ya_maps_api_wrapper_1.YaMapsAPIWrapper,
                marker_manager_1.MarkerManager,
                claster_manager_1.ClasterManager,
                objectManager_manager_1.ObjectManagerManager
            ],
            template: "\n    <div class=\"map-container-inner\" id=\"map\" >\n      <ng-content></ng-content>\n    </div>\n  "
        })
        // tslint:disable-next-line:component-class-suffix
        ,
        __metadata("design:paramtypes", [core_1.ElementRef, ya_maps_api_wrapper_1.YaMapsAPIWrapper])
    ], YaMap);
    return YaMap;
}());
exports.YaMap = YaMap;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_module_1 = __webpack_require__(9);
exports.YaCoreModule = core_module_1.YaCoreModule;


/***/ })
/******/ ]);
});
//# sourceMappingURL=index.umd.js.map