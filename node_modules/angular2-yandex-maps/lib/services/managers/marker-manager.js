import { Injectable, NgZone } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { YaMapsAPIWrapper } from '../../ya-maps-api-wrapper';
var MarkerManager = /** @class */ (function () {
    function MarkerManager(_mapsWrapper, _zone) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._markers = new Map();
    }
    MarkerManager.prototype.deleteMarker = function (marker) {
        var _this = this;
        var m = this._markers.get(marker);
        if (m == null) {
            return Promise.resolve();
        }
        // tslint:disable-next-line:no-shadowed-variable
        return m.then(function (m) {
            return _this._zone.run(function () {
                // tslint:disable-next-line:no-shadowed-variable
                _this.getNativeMarker(marker).then(function (m) {
                    _this._mapsWrapper.removeGeo(m);
                    _this._markers.delete(marker);
                });
            });
        });
    };
    MarkerManager.prototype.addMarker = function (marker) {
        var markerPromise = this._mapsWrapper.createMarker(marker);
        this._markers.set(marker, markerPromise);
    };
    MarkerManager.prototype.showBalloon = function (marker) {
        this.getNativeMarker(marker).then(function (m) {
            m.balloon.open();
        });
    };
    MarkerManager.prototype.getNativeMarker = function (marker) {
        return this._markers.get(marker);
    };
    MarkerManager.prototype.createEventObservable = function (eventName, marker) {
        var _this = this;
        return Observable.create(function (observer) {
            _this._markers.get(marker).then(function (m) {
                m.events.add(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });
            });
        });
    };
    MarkerManager.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    MarkerManager.ctorParameters = function () { return [
        { type: YaMapsAPIWrapper, },
        { type: NgZone, },
    ]; };
    return MarkerManager;
}());
export { MarkerManager };
//# sourceMappingURL=marker-manager.js.map