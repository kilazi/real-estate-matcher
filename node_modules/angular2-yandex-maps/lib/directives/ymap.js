// tslint:disable-next-line:max-line-length
import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { YaMapsAPIWrapper } from '../ya-maps-api-wrapper';
import { MarkerManager } from '../services/managers/marker-manager';
import { ClasterManager } from '../services/managers/claster-manager';
import { ObjectManagerManager } from '../services/managers/objectManager-manager';
// tslint:disable-next-line:component-class-suffix
var YaMap = /** @class */ (function () {
    function YaMap(_elem, _mapsWrapper) {
        this._elem = _elem;
        this._mapsWrapper = _mapsWrapper;
        this.longitude = 0;
        this.latitude = 0;
        this.zoom = 8;
        this.mapType = 'yandex#map';
        this.controls = null;
        // tslint:disable-next-line:max-line-length
        this.mapClick = new EventEmitter();
        this.actionTick = new EventEmitter();
        this.mapInit = false;
        this._observableSubscriptions = [];
    }
    YaMap.prototype.ngOnInit = function () {
        var container = this._elem.nativeElement.querySelector('.map-container-inner');
        this._initMapInstance(container);
        this.mapInit = true;
    };
    YaMap.prototype.ngOnChanges = function (changes) {
        if (this.mapInit) {
            this.updatePosition(changes);
            this.panTo(changes);
        }
    };
    YaMap.prototype._initMapInstance = function (el) {
        if (this.controls != null) {
            this._mapsWrapper.createMap(el, {
                center: [this.latitude, this.longitude], zoom: this.zoom, type: this.mapType,
                controls: this.controls
            });
        }
        else {
            this._mapsWrapper.createMap(el, {
                center: [this.latitude, this.longitude], zoom: this.zoom, type: this.mapType
            });
        }
        this._handleMapMouseEvents();
    };
    YaMap.prototype.updatePosition = function (changes) {
        if (changes['latitude'] == null && changes['longitude'] == null) {
            return;
        }
        this._mapsWrapper.setCenter(this.latitude, this.longitude);
    };
    YaMap.prototype.panTo = function (changes) {
        if (changes['panToObjects'] == null) {
            return;
        }
        this._mapsWrapper.panTo(this.panToObjects.points, this.panToObjects.params);
    };
    YaMap.prototype._handleMapMouseEvents = function () {
        var _this = this;
        var clickEvents = [
            { name: 'click', emitter: this.mapClick }
        ];
        var events = [
            { name: 'actiontick', emitter: this.actionTick }
        ];
        clickEvents.forEach(function (e) {
            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {
                var coords = event.get('coords');
                var value = { lat: coords[0], lng: coords[1] };
                e.emitter.emit(value);
            });
            _this._observableSubscriptions.push(s);
        });
        events.forEach(function (e) {
            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {
                _this._mapsWrapper.getCenter().then(function (coords) {
                    _this.latitude = coords[0];
                    _this.longitude = coords[1];
                    var value = { lat: coords[0], lng: coords[1] };
                    e.emitter.emit(value);
                });
            });
            _this._observableSubscriptions.push(s);
        });
    };
    YaMap.decorators = [
        { type: Component, args: [{
                    selector: 'ya-map',
                    providers: [
                        YaMapsAPIWrapper,
                        MarkerManager,
                        ClasterManager,
                        ObjectManagerManager
                    ],
                    template: "\n    <div class=\"map-container-inner\" id=\"map\" >\n      <ng-content></ng-content>\n    </div>\n  "
                },] },
    ];
    /** @nocollapse */
    YaMap.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: YaMapsAPIWrapper, },
    ]; };
    YaMap.propDecorators = {
        'longitude': [{ type: Input },],
        'latitude': [{ type: Input },],
        'zoom': [{ type: Input },],
        'minZoom': [{ type: Input },],
        'maxZoom': [{ type: Input },],
        'mapType': [{ type: Input },],
        'controls': [{ type: Input },],
        'panToObjects': [{ type: Input },],
        'mapClick': [{ type: Output },],
        'actionTick': [{ type: Output },],
    };
    return YaMap;
}());
export { YaMap };
//# sourceMappingURL=ymap.js.map