// tslint:disable-next-line:max-line-length
import { Directive, EventEmitter, Input, Output } from '@angular/core';
import { YaMapsAPIWrapper } from '../ya-maps-api-wrapper';
import { MarkerManager } from '../services/managers/marker-manager';
var markerId = 0;
// tslint:disable-next-line:directive-class-suffix
var YaMarker = /** @class */ (function () {
    function YaMarker(_markerManager) {
        this._markerManager = _markerManager;
        this.draggable = false;
        this.preset = 'islands#blueIcon';
        this.markerClick = new EventEmitter();
        // tslint:disable-next-line:max-line-length
        this.dragEnd = new EventEmitter();
        this._markerAddedToManger = false;
        this._observableSubscriptions = [];
        this._id = (markerId++).toString();
    }
    YaMarker.prototype.ngOnChanges = function (changes) {
        if (!this._markerAddedToManger) {
            this._markerManager.addMarker(this);
            this._markerAddedToManger = true;
            this._addEventListeners();
            return;
        }
        if (changes['showInfo']) {
            this._markerManager.showBalloon(this);
        }
    };
    YaMarker.prototype.ngOnDestroy = function () {
        this._markerManager.deleteMarker(this);
        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    YaMarker.prototype._addEventListeners = function () {
        var _this = this;
        // click event
        var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {
            _this._markerManager.showBalloon(_this);
            _this.markerClick.emit(null);
        });
        this._observableSubscriptions.push(cs);
        // dragend event
        // tslint:disable-next-line:max-line-length
        var ds = this._markerManager.createEventObservable('dragend', this).subscribe(function (e) {
            var thisPlacemark = e.get('target');
            var coords = thisPlacemark.geometry.getCoordinates();
            _this._markerManager.getNativeMarker(_this).then(function (m) {
                // tslint:disable-next-line:max-line-length
                _this.dragEnd.emit({ lat: coords[0], lng: coords[1], nativeMarker: m });
            });
        });
        this._observableSubscriptions.push(ds);
    };
    YaMarker.decorators = [
        { type: Directive, args: [{
                    selector: 'ya-marker',
                    providers: [
                        YaMapsAPIWrapper
                    ]
                },] },
    ];
    /** @nocollapse */
    YaMarker.ctorParameters = function () { return [
        { type: MarkerManager, },
    ]; };
    YaMarker.propDecorators = {
        'latitude': [{ type: Input },],
        'longitude': [{ type: Input },],
        'balloonLayout': [{ type: Input },],
        'balloonContentHeader': [{ type: Input },],
        'balloonContentBody': [{ type: Input },],
        'balloonContentFooter': [{ type: Input },],
        'draggable': [{ type: Input },],
        'preset': [{ type: Input },],
        'iconContent': [{ type: Input },],
        'showInfo': [{ type: Input },],
        'iconLayout': [{ type: Input },],
        'iconImageHref': [{ type: Input },],
        'iconImageSize': [{ type: Input },],
        'iconImageOffset': [{ type: Input },],
        'markerClick': [{ type: Output },],
        'dragEnd': [{ type: Output },],
    };
    return YaMarker;
}());
export { YaMarker };
//# sourceMappingURL=marker.js.map